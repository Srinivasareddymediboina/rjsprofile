{"version":3,"sources":["user-3.jpg","profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","indexValue","this","props","location","data","id","specificProfile","Data","profiles","className","src","logo","alt","basicInformation","name","href","email","mobile","summary","map","i","j","exp","education","degree","institution","skillset","pro","fram","os","web","certifications","python","univercity","React","Component","Home","info","index","key","role","to","pathname","App","k","l","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db459b26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-3.b7daf392.jpg\";","import React from 'react';\r\nimport './App.css';\r\nimport Data from './data/data.json';\r\nimport logo from './user-3.jpg';\r\n\r\nclass Profile extends React.Component{\r\n    render(){\r\n        var indexValue=this.props.location.data.id;\r\n        var specificProfile=Data.profiles[indexValue];\r\n        return(\r\n            <section className=\"parent1\">\r\n<div className=\"card\"> \r\n<div className=\"card-top mydiv\">\r\n<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n<h1> {specificProfile.basicInformation.name} </h1>\r\n\r\n<a href={\"mailto:\"+specificProfile.basicInformation.email}> \r\n{specificProfile.basicInformation.email}  </a>\r\n\r\n<a href={\"tel:\"+specificProfile.basicInformation.mobile}> \r\n{specificProfile.basicInformation.mobile}</a>\r\n</div>\r\n                \r\n</div>\r\n\r\n<div className=\"card2\">\r\n    <div className=\"card-bottom mydiv\">\r\n          <h1> Summary </h1>\r\n    </div>\r\n    <div className=\"card-top\">\r\n        {specificProfile.summary.map((i,j)=>(\r\n            <ul>\r\n            \r\n            <p> {i.exp} </p>\r\n            </ul>\r\n            ))}\r\n    </div>\r\n\r\n    <div className=\"card-bottom mydiv\">\r\n          <h1> Educational Qualifications</h1>\r\n    </div>\r\n\r\n    <div className=\"card-top\">\r\n        {specificProfile.education.map((i,j)=>(\r\n            <ul>\r\n            <p className=\"c\"> {i.degree} </p>\r\n            <p className=\"u\"> {i.institution} </p>\r\n            </ul>\r\n            ))}\r\n    </div>\r\n\r\n    <div className=\"card-bottom mydiv\">\r\n          <h1> Skillset</h1>\r\n    </div>\r\n    <div className=\"card-top\">\r\n        {specificProfile.skillset.map((i,j)=>(\r\n            <ul>\r\n            <p className=\"c\">{i.pro} </p><br />\r\n            <p className=\"c\"> {i.fram} </p><br />\r\n            <p className=\"c\">{i.os} </p><br />\r\n            <p className=\"c\"> {i.web} </p><br />\r\n            </ul>\r\n            ))}\r\n    </div>\r\n\r\n    <div className=\"card-bottom mydiv\">\r\n          <h1> Global Certifications</h1>\r\n    </div>\r\n    <div className=\"card-top\">\r\n        {specificProfile.certifications.map((i,j)=>(\r\n            <ul>\r\n            <p className=\"c\">{i.python} </p>\r\n            <p className=\"u\"> {i.univercity} </p>\r\n            </ul>\r\n            ))}\r\n    </div>\r\n</div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport './App.css';\nimport Profile from './profile';\nimport Data from './data/data.json';\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\n\n\n\nfunction App(){\n  var info=Data.profiles;\n  return(\n    <section>\n      \n       <BrowserRouter>\n       <header className=\"header\">\n      {info.map((k,l)=>(\n        <Link to={{pathname:\"/profile\",data:{id:l}}} key={l}> {\"Srinivasa Reddy\"+(l+1)} </Link>\n      ))}\n    \n    </header> <br/> <br/> \n\n        <Route exact path=\"/profile\" component={Profile} /><br/>\n        <Route exact path=\"/\" component={Home} />\n\n       \n      </BrowserRouter>\n    \n     \n      </section>\n  )\n}\n\nlet Home=()=>{\n  var info=Data.profiles;\nreturn(\n<section className=\"parent\">\n{info.map((i,index)=>(\n\n\n        <div className=\"card\" key={index}>\n          \n          <div className=\"card-to\">\n          \n          <h2> {i.basicInformation.name} </h2>\n      <h5> <em> {i.basicInformation.role}</em></h5>\n      </div>\n\n      <div className=\"card-bottom\">\n        <a href={\"mailto:\"+i.basicInformation.email}> {i.basicInformation.email}  </a>\n\n        <a href={\"tel:\"+i.basicInformation.mobile}> {i.basicInformation.mobile}</a> <br />\n        <Link to={{pathname:\"/profile\",data:{id:index}}}> View More </Link>\n      </div>\n        </div>\n      ))}\n      <section className=\"parent\">\n      \n      </section>\n</section>\n)\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}